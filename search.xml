<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Typora美化及配置</title>
      <link href="/typora-mei-hua-ji-pei-zhi.html"/>
      <url>/typora-mei-hua-ji-pei-zhi.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Typora更换主题"><a href="#一、Typora更换主题" class="headerlink" title="一、Typora更换主题"></a>一、Typora更换主题</h2><ul><li><a href="https://theme.typora.io/" target="_blank" rel="noopener">Typora主题官方下载链接</a></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819103147758.png" alt="image-20210819103147758"></p><ul><li>选择喜欢的主题并下载</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819103318928.png" alt="image-20210819103318928"></p><ul><li>打开Typora的主题文件夹</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819103353363.png" alt="image-20210819103353363"></p><ul><li>将下载好的主题解压后复制到Typora的主题文件夹</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819103533708.png" alt="image-20210819103533708"></p><ul><li>重启Typora即可在主题按钮下选择主题</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819103632160.png" alt="image-20210819103632160"></p><h2 id="二、修改Typora背景颜色"><a href="#二、修改Typora背景颜色" class="headerlink" title="二、修改Typora背景颜色"></a>二、修改Typora背景颜色</h2><p>白色背景有时候会与图片的白色背景融合在一起，不容易看到图片边界，因此可以通过以下方式修改下Typora的背景颜色。</p><ul><li><p>打开Typora安装路径下的\Typora\Typora\resources\style\base.css文件</p></li><li><p>修改–bg-color的颜色</p></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819104558631.png" alt="image-20210819104558631"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819104615514.png" alt="image-20210819104615514"></p><ul><li>保存后重新启动Typora</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819104710412.png" alt="image-20210819104710412"></p>]]></content>
      
      
      <categories>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04安装openLDAP</title>
      <link href="/ubuntu16-04-an-zhuang-openldap.html"/>
      <url>/ubuntu16-04-an-zhuang-openldap.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、OpenLDAP-Server安装步骤"><a href="#一、OpenLDAP-Server安装步骤" class="headerlink" title="一、OpenLDAP Server安装步骤"></a>一、OpenLDAP Server安装步骤</h2><ul><li>安装Berkeley DB</li></ul><pre><code>$&gt; tar zxvf db-4.8.30.tar.gz$&gt; cd db-4.8.30/build_unix/$&gt; ../dist/configure$&gt; make$&gt; sudo make install$&gt; sudo cp /usr/local/BerkeleyDB.4.8/include/* /usr/include/ (for build openldap)$&gt; sudo cp /usr/local/BerkeleyDB.4.8/lib/* /usr/lib (for build openldap)</code></pre><ul><li>安装openssl和ldap-utils</li></ul><pre><code>sudo apt-get install libcurl4-openssl-dev ldap-utils libssl-dev</code></pre><ul><li>安装OpenLDAP</li></ul><pre><code>$&gt; tar zxvf openldap-2.4.50.tgz$&gt; cd openldap-2.4.50/$&gt; export CPPFLAGS=&quot;-I/usr/local/BerkeleyDB.4.8/include&quot;$&gt; export LDFLAGS=&quot;-L/usr/local/BerkeleyDB.4.8/lib&quot;$&gt; ./configure --prefix=/usr/local/openldap --with-tls=openssl$&gt; make depend$&gt; make$&gt; sudo make install</code></pre><h2 id="二、配置OpenLDAP—-无加密"><a href="#二、配置OpenLDAP—-无加密" class="headerlink" title="二、配置OpenLDAP—-无加密"></a>二、配置OpenLDAP—-无加密</h2><ul><li>修改OpenLDAP配置文件</li></ul><pre><code>$&gt; sudo vim /usr/local/openldap/etc/openldap/slapd.conf</code></pre><ul><li>在上述命令打开的slapd.conf配置文件中添加下述内容</li></ul><pre><code>include /usr/local/openldap/etc/openldap/schema/corba.schemainclude /usr/local/openldap/etc/openldap/schema/cosine.schemainclude /usr/local/openldap/etc/openldap/schema/dyngroup.schemainclude /usr/local/openldap/etc/openldap/schema/inetorgperson.schemainclude /usr/local/openldap/etc/openldap/schema/java.schemainclude /usr/local/openldap/etc/openldap/schema/misc.schemainclude /usr/local/openldap/etc/openldap/schema/nis.schemainclude /usr/local/openldap/etc/openldap/schema/openldap.schema</code></pre><ul><li>在打开的slapd.conf配置文件中修改下述内容</li></ul><pre><code>suffix &quot;dc=example,dc=com&quot;rootdn &quot;cn=Manager,dc=example,dc=com&quot;rootpw secret</code></pre><ul><li>启动OpenLDAP Server</li></ul><pre><code>$&gt; sudo /usr/local/openldap/libexec/slapd -d 1</code></pre><ul><li>为OpenLDAP Server添加用户</li></ul><pre><code>$&gt; vim ~/.ldaprc</code></pre><p>​         在上述文件中添加下述内容</p><pre><code>URI ldap://192.168.0.100(192.168.0.100 is ldap server ip)BASE dc=example,dc=com</code></pre><p>​         添加用户—-abcd.ldif文件内容见附录</p><pre><code>$&gt; /usr/local/openldap/bin/ldapadd -x -D &quot;cn=Manager,dc=example,dc=com&quot; -W -f abcd.ldif</code></pre><p>​         查看用户</p><pre><code>$&gt; /usr/local/openldap/bin/ldapsearch -x -b &#39;dc=example,dc=com&#39; (for check adding use roperation) </code></pre><h2 id="三、配置OpenLDAP—-SSL加密"><a href="#三、配置OpenLDAP—-SSL加密" class="headerlink" title="三、配置OpenLDAP—-SSL加密"></a>三、配置OpenLDAP—-SSL加密</h2><ul><li>创建SSL认证文件</li></ul><pre><code>$&gt; openssl req -newkey rsa:1024 -x509 -nodes -out server.pem -keyout server.pem -days 3650$&gt; sudo cp server.pem /usr/local/etc/</code></pre><ul><li>配置OpenLDAP Server以支持SSL加密—-此配置是在无加密配置上更改</li></ul><pre><code>$&gt; sudo vim /usr/local/openldap/etc/openldap/slapd.conf</code></pre><ul><li>在上述配置文件添加下述内容</li></ul><pre><code>TLSCipherSuite HIGH:MEDIUM:+SSLv2:+SSLv3:+TLSv1TLSVerifyClient neverTLSCACertificateFile /usr/local/etc/server.pemTLSCertificateFile /usr/local/etc/server.pemTLSCertificateKeyFile /usr/local/etc/server.pem</code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819111609955.png" alt="image-20210819111609955"></p><ul><li>启动OpenLDAP Server</li></ul><pre><code>$&gt; sudo /usr/local/openldap/libexec/slapd -h ldaps:// -d 1</code></pre><h2 id="四、配置OpenLDAP—-StartTLS加密"><a href="#四、配置OpenLDAP—-StartTLS加密" class="headerlink" title="四、配置OpenLDAP—-StartTLS加密"></a>四、配置OpenLDAP—-StartTLS加密</h2><ul><li>生成StartTLS认证文件。注意：192.168.0.100是OpenLDAP Server IP</li></ul><pre><code>Create CA certificat:$&gt; openssl genrsa 2048 &gt; cakey.pem$&gt; openssl req -new -sha256 -x509 -nodes -days 3650 -key cakey.pem -out cacert.pem -subj &#39;/C=bb/ST=bb/L=bb/CN=192.168.0.100/emailAddress=bb@bb.bb&#39;Create server certificate:$&gt; openssl req -sha256 -newkey rsa:2048 -days 3650 -nodes -keyout server-key.pem -out server-req.pem -subj &#39;/C=cc/ST=cc/L=cc/CN=192.168.0.100/emailAddress=cc@cc.cc&#39;$&gt; openssl rsa -in server-key.pem -out server-key.pem$&gt; openssl x509 -sha256 -req -in server-req.pem -days 3650 -CA cacert.pem -CAkey cakey.pem -set_serial 01 -out server-crt.pemCreate client certificate:$&gt; openssl req -sha256 -newkey rsa:2048 -days 3650 -nodes -keyout client-key.pem -out client-req.pem -subj &#39;/C=dd/ST=dd/L=dd/CN=192.168.0.100/emailAddress=dd@dd.dd&#39;$&gt; openssl rsa -in client-key.pem -out client-key.pem$&gt; openssl x509 -sha256 -req -in client-req.pem -days 3650 -CA cacert.pem -CAkey cakey.pem -set_serial 01 -out client-crt.pem</code></pre><ul><li>修改认证文件路径</li></ul><pre><code>$&gt; sudo mkdir /var/myca$&gt; sudo mkdir /var/myca/client$&gt; sudo cp cacert.pem /usr/local/openldap/etc/certs/$&gt; sudo cp cacert.pem /var/myca/client$&gt; sudo mv server-* /usr/local/openldap/etc/certs/$&gt; sudo mv client-* /var/myca/client</code></pre><ul><li>配置OpenLDAP Server以支持StartTLS加密—-此配置是在SSL配置上更改的</li></ul><pre><code>$&gt; vim /usr/local/openldap/etc/openldap/slapd.conf</code></pre><ul><li>在slapd.conf文件中修改下述内容</li></ul><pre><code>TLSVerifyClient never =&gt; TLSVerifyClient demand</code></pre><ul><li>在slapd.conf文件中注释下述内容</li></ul><pre><code>#TLSCACertificateFile /usr/local/openldap/etc/server.pem#TLSCertificateFile /usr/local/openldap/etc/server.pem#TLSCertificateKeyFile /usr/local/openldap/etc/server.pem</code></pre><ul><li>在slapd.conf文件中添加下述内容</li></ul><pre><code>TLSCACertificateFile /usr/local/openldap/etc/certs/cacert.pemTLSCertificateFile /usr/local/openldap/etc/certs/server-crt.pemTLSCertificateKeyFile /usr/local/openldap/etc/certs/server-key.pem</code></pre><ul><li>启动OpenLDAP Server</li></ul><pre><code> $&gt; /usr/local/openldap/libexec/slapd -d 1</code></pre><h2 id="附录：abcd-ldif文件内容"><a href="#附录：abcd-ldif文件内容" class="headerlink" title="附录：abcd.ldif文件内容"></a>附录：abcd.ldif文件内容</h2><pre><code>dn: dc=example,dc=comobjectclass: topobjectClass: dcobjectobjectClass: organizationdc: exampleo: example comdn: ou=user, dc=example,dc=comou: userobjectClass: organizationalUnitdn: ou=testgroup, dc=example,dc=comou: testgroupobjectClass: organizationalUnitdn: cn=ldaprg1,ou=testgroup, dc=example,dc=comobjectClass: groupOfNamescn: ldaprg1member: cn=LDAPuser1,ou=user,dc=example,dc=comdn: cn=LDAPuser1,ou=user, dc=example,dc=comuserPassword:: MTExMTEx#Password is 111111uid: test001objectClass: uidObjectobjectClass: topobjectClass: personsn: LDAPcn: LDAPuser1</code></pre>]]></content>
      
      
      <categories>
          
          <category> openLDAP </category>
          
          <category> ubuntu16.04 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu16.04 </tag>
            
            <tag> openLDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04安装dhcpv6</title>
      <link href="/ubuntu16-04-an-zhuang-dhcpv6.html"/>
      <url>/ubuntu16-04-an-zhuang-dhcpv6.html</url>
      
        <content type="html"><![CDATA[<h2 id="ISC-dhcp-server安装"><a href="#ISC-dhcp-server安装" class="headerlink" title="ISC dhcp server安装"></a>ISC dhcp server安装</h2><ul><li>执行下述命令安装ISC dhcp server</li></ul><pre><code>sudo apt-get install isc-dhcp-server</code></pre><ul><li>为接口设置一个静态IPv6地址我要从中运行DHCPv6服务器，该地址是DHCP范围之外的IPv6网络子网的一部分。</li></ul><pre><code>sudo ifconfig eth0 inet6 add 2001:db8:0:1::128/64</code></pre><ul><li>编辑/etc/dhcp/dhcpd6.conf文件以配置DHCPv6范围等，添加下述内容。</li></ul><pre><code>default-lease-time 600;max-lease-time 7200;log-facility local7;subnet6 2001:db8:0:1::/64{#Range for clientsrange6 2001:db8:0:1::129 2001:db8:0:1::254;}</code></pre><ul><li>创建/var/lib/dhcp/dhcpd6.leases</li></ul><pre><code>touch /var/lib/dhcp/dhcpd6.leasessudo chmod 777 /var/lib/dhcp/dhcpd6.leases</code></pre><ul><li>手动启动DHCPv6服务器。</li></ul><pre><code>sudo dhcpd -6 -f -cf /etc/dhcp/dhcpd6.conf eth0</code></pre>]]></content>
      
      
      <categories>
          
          <category> ipv6 </category>
          
          <category> ubuntu16.04 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu16.04 </tag>
            
            <tag> dhcpv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04安装radvd</title>
      <link href="/ubuntu16-04-an-zhuang-radvd.html"/>
      <url>/ubuntu16-04-an-zhuang-radvd.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装radvd"><a href="#安装radvd" class="headerlink" title="安装radvd"></a>安装radvd</h2><ul><li>执行下述命令进行安装</li></ul><pre><code>sudo apt-install radvd</code></pre><ul><li>配置radvd</li></ul><pre><code>touch /etc/radvd.conf chmod 777 /etc/radvd.conf</code></pre><p>​         配置如下：</p><pre><code>#log-level 8#log-mode full#statelessinterface eth0 {   AdvSendAdvert on;   MinRtrAdvInterval 30;   MaxRtrAdvInterval 600;   AdvManagedFlag on;                   #M bit=1   AdvOtherConfigFlag on;               #O bit=1   AdvLinkMTU 1500;   AdvSourceLLAddress on;   AdvDefaultPreference high;   prefix 2001:db8:0:1::/64   {   AdvOnLink on;   AdvAutonomous off;                   #A bit=0   AdvRouterAddr on;   AdvPreferredLifetime 3600;   AdvValidLifetime 7200;   }; route 2001:db8:0:1::/64 {    };};</code></pre><ul><li>启动radvd</li></ul><pre><code>sudo radvd –C /etc/radvd.conf start</code></pre><ul><li>停止的话需要手动kill这个进程</li></ul><pre><code>killall radvd</code></pre>]]></content>
      
      
      <categories>
          
          <category> ipv6 </category>
          
          <category> ubuntu16.04 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu16.04 </tag>
            
            <tag> radvd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习环境配置</title>
      <link href="/shen-du-xue-xi-huan-jing-pei-zhi-cuda-tensorflow-pytorch.html"/>
      <url>/shen-du-xue-xi-huan-jing-pei-zhi-cuda-tensorflow-pytorch.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装Anaconda"><a href="#一、安装Anaconda" class="headerlink" title="一、安装Anaconda"></a>一、安装Anaconda</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载地址：<a href="https://www.anaconda.com/download/" target="_blank" rel="noopener">https://www.anaconda.com/download/</a></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819141212750.png" alt="image-20210819141212750"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>打开安装包，点击Next</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724211856768.png" alt="在这里插入图片描述"></p><ul><li>点击I Agree</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724211918523.png" alt="在这里插入图片描述"></p><ul><li>Just me还是All Users，假如你的电脑有好几个 Users ，才需要考虑这个问题.其实我们电脑一般就一个 User，就我们一个人使用，如果你的电脑有多个用户，选择All Users，我这里直接 All User，继续点击 Next。</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724212329536.png" alt="在这里插入图片描述"></p><ul><li>选择安装目录</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724212534120.png" alt="在这里插入图片描述"></p><ul><li>第一个选项是加入环境变量，建议小伙伴们选中这个选项，否则后面需要自己配置环境变量比较麻烦，第二个是默认使用 Python 3.8，此选项可以不选。点击Install</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724213932775.png" alt="在这里插入图片描述"></p><ul><li>执行安装</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724214310251.png" alt="在这里插入图片描述"></p><ul><li>点击Next</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/2020072421485150.png" alt="在这里插入图片描述"></p><ul><li>还是点击Next</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724214955473.png" alt="在这里插入图片描述"></p><ul><li>这两个选项直接取消掉就行，跟安装一点关系没有。点击Finish</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200724215308519.png" alt="在这里插入图片描述"></p><ul><li>安装完成后打开cmd，输入下列命令查看是否安装成功</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20200725100810974.png" alt="在这里插入图片描述"></p><h2 id="二、使用Anaconda创建虚拟环境"><a href="#二、使用Anaconda创建虚拟环境" class="headerlink" title="二、使用Anaconda创建虚拟环境"></a>二、使用Anaconda创建虚拟环境</h2><p>创建虚拟环境的目的：满足存在多个项目需要不同运行环境的情况。<br>创建方法：</p><ul><li>在Anaconda Prompt中输入下述命令</li></ul><pre><code>conda create -n &lt;your env name&gt; python=&lt;your python version&gt;</code></pre><blockquote><p>注：上述命令中 <code>&lt;your env name&gt;</code>是虚拟环境名，<code>&lt;your python version&gt;</code>是虚拟环境所使用的python版本。</p><p>例如若环境名设置为tensorflow_lh，python版本使用3.6则命令为：</p><pre><code>conda create -n tensorflow_lh python=3.6</code></pre></blockquote><ul><li>激活虚拟环境则在Anaconda Prompt中输入下述命令</li></ul><pre><code>conda activate &lt;your env name&gt;</code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819142914767.png" alt="image-20210819142914767"></p><h2 id="三、安装CUDA和cudnn"><a href="#三、安装CUDA和cudnn" class="headerlink" title="三、安装CUDA和cudnn"></a>三、安装CUDA和cudnn</h2><p>此部分安装教程配置为RTX3060显卡+CUDA11.1+cudnn8.0.5</p><h3 id="CUDA下载与安装"><a href="#CUDA下载与安装" class="headerlink" title="CUDA下载与安装"></a>CUDA下载与安装</h3><ul><li>cuda下载地址：<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a></li><li>选择cuda11.1下载</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819143631053.png" alt="image-20210819143631053"></p><ul><li>根据自己电脑配置选择并下载</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/25011725-eed1f92551583cb6.png" alt="img"></p><ul><li>下载完成后点击安装包进行安装</li></ul><h3 id="Cudnn下载与安装"><a href="#Cudnn下载与安装" class="headerlink" title="Cudnn下载与安装"></a>Cudnn下载与安装</h3><ul><li>cudnn下载网址：<a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">https://developer.nvidia.com/cudnn</a></li><li>直接官网下载就可以了，不过需要注册个账号。下载cudnn8.0.5</li><li>下载解压完成后，就是三个文件夹+一个txt</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/25011725-d16b66da90922267.png" alt="img"></p><ul><li>将cudnn里面的三个文件夹复制到cuda安装目录，然后全部替换掉。cuda默认安装话，安装目录如下图：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/25011725-d103202ac10d51c0.png" alt="img"></p><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><ul><li>下面是环境变量配置，在系统中添加以下 5个 环境变量：</li></ul><pre><code>CUDA_SDK_PATH = C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.1       （cuda默认安装的话就是这个路径）CUDA_LIB_PATH = %CUDA_PATH%\lib\x64CUDA_BIN_PATH = %CUDA_PATH%\binCUDA_SDK_BIN_PATH = %CUDA_SDK_PATH%\bin\win64CUDA_SDK_LIB_PATH = %CUDA_SDK_PATH%\common\lib\x64</code></pre><ul><li>在环境变量Path中添加：</li></ul><pre><code>C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.1\common\lib\x64C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1\lib\x64C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.1\bin\win64C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1\bin</code></pre><h2 id="四、安装Tensorflow-gpu"><a href="#四、安装Tensorflow-gpu" class="headerlink" title="四、安装Tensorflow-gpu"></a>四、安装Tensorflow-gpu</h2><ul><li>在Anaconda Prompt中激活虚拟环境</li></ul><pre><code>例如：conda activate tensorflow_lh</code></pre><ul><li>执行下列命令进行安装</li></ul><pre><code>pip install tensorflow-gpu==2.4.1 -i https://pypi.tuna.tsinghua.edu.cn/simple</code></pre><h2 id="五、安装Pytorch"><a href="#五、安装Pytorch" class="headerlink" title="五、安装Pytorch"></a>五、安装Pytorch</h2><ul><li>在Anaconda Prompt中激活虚拟环境</li></ul><pre><code>例如：conda activate pytorch_lh</code></pre><ul><li>执行下列命令进行安装</li><li>安装命令可参考此链接：<a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener">https://pytorch.org/get-started/locally/</a></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819145600765.png" alt="image-20210819145600765"></p><pre><code>conda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c conda-forge</code></pre>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CUDA </tag>
            
            <tag> Tensorflow </tag>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neo4j安装</title>
      <link href="/neo4j-an-zhuang.html"/>
      <url>/neo4j-an-zhuang.html</url>
      
        <content type="html"><![CDATA[<h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><p>从官网下载jdk1.8</p><p>下载地址:<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819151628734.png" alt="image-20210819151628734"></p><ul><li>下载后点击安装</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819152513903.png" alt="image-20210819152513903"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819152528683.png" alt="image-20210819152528683"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819152547735.png" alt="image-20210819152547735"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819152645928.png" alt="image-20210819152645928"></p><ul><li>打开cmd输入<code>java -version</code>可查看java是否安装成功</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819152735871.png" alt="image-20210819152735871"></p><h2 id="Neo4j安装"><a href="#Neo4j安装" class="headerlink" title="Neo4j安装"></a>Neo4j安装</h2><p>下载链接：<a href="https://neo4j.com/download-center/" target="_blank" rel="noopener">Neo4j Download Center - Neo4j Graph Database Platform</a></p><p>推荐下载community server版本</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819151058618.png" alt="image-20210819151058618"></p><ul><li>解压后即安装完成</li><li>添加neo4j的环境变量</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819154348241.png" alt="image-20210819154348241"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819153251764.png" alt="image-20210819153251764"></p><ul><li>验证</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819161959580.png" alt="image-20210819161959580"></p><blockquote><p>除了<code>neo4j.bat console</code>以外还可以用service的形式运行neo4j</p></blockquote><ul><li>在cmd下输入<code>neo4j.bat install-service</code></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819171816521.png" alt="image-20210819171816521"></p><ul><li>然后再windows的services list下可以发现neo4j的service已经安装成功</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819171941917.png" alt="image-20210819171941917"></p><ul><li>之后我们可以再cmd中使用<code>neo4j.bat start</code>命令启动neo4j sevices</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819172106844.png" alt="image-20210819172106844"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819172237397.png" alt="image-20210819172237397"></p><p>注：默认登陆账号密码均为neo4j，初次登陆后需要修改密码，可修改为admin</p><ul><li>若要查看当前neo4j service的状态可通过<code>neo4j.bat status</code>命令</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819173041674.png" alt="image-20210819173041674"></p><ul><li>若要停止neo4j sevices可在cmd输入<code>neo4j.bat stop</code>命令</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819172403607.png" alt="image-20210819172403607"></p><ul><li>如果不需要neo4j services则可通过<code>neo4j.bat uninstall-service</code>命令卸载服务</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210819172825494.png" alt="image-20210819172825494"></p>]]></content>
      
      
      <categories>
          
          <category> 知识图谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Neo4j </tag>
            
            <tag> 知识图谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora+picgo+gitee配置图片上传</title>
      <link href="/typora-picgo-gitee-pei-zhi-tu-pian-shang-chuan.html"/>
      <url>/typora-picgo-gitee-pei-zhi-tu-pian-shang-chuan.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Gitee配置"><a href="#一、Gitee配置" class="headerlink" title="一、Gitee配置"></a>一、Gitee配置</h2><ul><li>新建仓库</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204142273.png" alt="image-20210818204142273"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204220680.png" alt="image-20210818204220680"></p><ul><li>获取私人令牌</li><li>头像–&gt;设置–&gt;私有令牌–&gt;生成新令牌</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204449582.png" alt="image-20210818204449582"></p><ul><li>提交后保留令牌token</li></ul><h2 id="二、PicGo"><a href="#二、PicGo" class="headerlink" title="二、PicGo"></a>二、PicGo</h2><ul><li><p>传送门： <em><a href="https://link.zhihu.com/?target=https%3A//github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></em></p><p>根据自己的系统来选择对应的版本</p></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-d6fe717dbc7be6954a43e62bf9808120_720w.jpg" alt="img"></p><ul><li>软件安装成功打开的界面如下：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-5171ea8bddd6cc103c4c417816954b78_720w.jpg" alt="img"></p><ul><li>下载gitee插件</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204736995.png" alt="image-20210818204736995"></p><ul><li><p>下载好插件后重启picgo</p></li><li><p>配置gitee图床</p></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204921634.png" alt="image-20210818204921634"></p><ul><li>配置picgo server</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818204944513.png" alt="image-20210818204944513"></p><h2 id="三、Typora配置"><a href="#三、Typora配置" class="headerlink" title="三、Typora配置"></a>三、Typora配置</h2><ul><li>配置图像上传信息</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818205121794.png" alt="image-20210818205121794"></p><ul><li>点击“验证图片上传选项”进行验证</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818205107864.png" alt="image-20210818205107864"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitee </tag>
            
            <tag> Picgo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装NVM管理nodejs</title>
      <link href="/an-zhuang-nvm-guan-li-nodejs.html"/>
      <url>/an-zhuang-nvm-guan-li-nodejs.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>nvm 的全称是 Node Version Manager，Nodejs 版本管理器。nvm 可以帮助我们快速切换 Nodejs 版本。</p><h2 id="一、-安装步骤"><a href="#一、-安装步骤" class="headerlink" title="一、 安装步骤"></a>一、 安装步骤</h2><p><strong>1. 下载地址</strong></p><ul><li>链接：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></li></ul><p><strong>可下载以下版本：</strong></p><ul><li>nvm-noinstall.zip：绿色免安装版，但使用时需要进行配置。</li><li>nvm-setup.zip：安装版，推荐使用</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818172640754.png" alt="image-20210818172640754"></p><p><strong>2. 安装（nvm-setup)</strong></p><ul><li>双击解压后的文件<code>nvm-setup.exe</code></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/webp.png" alt="img"></p><ul><li>选择nvm安装路径</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/webp-16292801254522.png" alt="img"></p><blockquote><p>注意：路径文件夹名不要出现中文和空格</p></blockquote><ul><li>选择nodeks安装路径</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/webp-16292801273374.png" alt="img"></p><ul><li>确认安装</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/webp-16292801291186.png" alt="img"></p><ul><li>检查是否安装成功</li></ul><p>打开CMD，输入<code>nvm</code>，安装成功则会如下图所示，它会显示出当前nvm版本以及nvm的命令：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/webp-16292801308228.png" alt="img"></p><h2 id="二、-配置nvm（避免timeout）"><a href="#二、-配置nvm（避免timeout）" class="headerlink" title="二、 配置nvm（避免timeout）"></a>二、 配置nvm（避免timeout）</h2><p>在nvm安装目录，找到settings.txt，添加以下两行</p><pre><code>node_mirror: https://npm.taobao.org/mirrors/node/npm_mirror: https://npm.taobao.org/mirrors/npm/</code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818203803904.png" alt="image-20210818203803904"></p><h2 id="三、使用NVM"><a href="#三、使用NVM" class="headerlink" title="三、使用NVM"></a>三、使用NVM</h2><ul><li>nvm list 命令 - 显示版本列表</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp">nvm list <span class="token comment" spellcheck="true">// 显示已安装的版本（同 nvm list installed）</span>nvm list installed <span class="token comment" spellcheck="true">// 显示已安装的版本</span>nvm list available <span class="token comment" spellcheck="true">// 显示所有可以下载的版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>nvm install 命令 - 安装指定版本nodejs</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp">nvm install <span class="token number">12.17</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token comment" spellcheck="true">// 安装12.17.0版本node</span>nvm install latest <span class="token comment" spellcheck="true">// 安装最新版本node</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>nvm use 命令 - 使用指定版本node</li></ul><pre class="line-numbers language-rust"><code class="language-rust">nvm <span class="token keyword">use</span> <span class="token number">12.17</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token comment" spellcheck="true">// 使用12.17.0版本node</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>使用node -v和npm -v命令查看当前使用的nodejs和npm版本</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/20201127175820370.png" alt="在这里插入图片描述"></p><ul><li>nvm uninstall 命令 - 卸载指定版本 node</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp">nvm uninstall <span class="token number">12.17</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token comment" spellcheck="true">// 卸载12.17.0版本node</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：在运行<code>nvm install</code> 的时候，有可能会出现无权限安装的问题，如果遇到此问题，请 <code>以管理员身份运行</code> cmd。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 搭建个人博客超详细教程</title>
      <link href="/github-hexo-da-jian-ge-ren-bo-ke-chao-xiang-xi-jiao-cheng.html"/>
      <url>/github-hexo-da-jian-ge-ren-bo-ke-chao-xiang-xi-jiao-cheng.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇内容参考[枫叶](<a href="https://zhuanlan.zhihu.com/p/102592286" target="_blank" rel="noopener">从零开始搭建个人博客（超详细） - 知乎 (zhihu.com)</a>)和[随风](<a href="https://zhuanlan.zhihu.com/p/111614119" target="_blank" rel="noopener">（一）Github + Hexo 搭建个人博客超详细教程 - 知乎 (zhihu.com)</a>)两位大佬的教程，非常感谢</p><h2 id="一、创建GitHub仓库"><a href="#一、创建GitHub仓库" class="headerlink" title="一、创建GitHub仓库"></a>一、创建GitHub仓库</h2><ul><li>新建仓库</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818210502894.png" alt="image-20210818210502894"></p><ul><li>输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上。名称一定要和你的Github名字完全一样，比如你github名字叫A，那么仓库名字一定要是A.github.io</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818210821131.png" alt="image-20210818210821131"></p><h2 id="二、安装Git"><a href="#二、安装Git" class="headerlink" title="二、安装Git"></a>二、安装Git</h2><ul><li><p>Git 2.25.0 安装步骤：</p><p>进入Git官网<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/" target="_blank" rel="noopener">Git官网</a>，点击 <strong><em>Downloads</em></strong> 下载：</p></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818211006168.png" alt="image-20210818211006168"></p><p>​        选择你的系统类型，我的是 Windows：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/image-20210818211019604.png" alt="image-20210818211019604"></p><ul><li>下载完成双击打开：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-ffd6a780ac8b9f7f7e66604f1c796f99_720w.jpg" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-df7dfe1d55e72e2f28292733194ed1f2_720w.jpg" alt="img"></p><ul><li>可以选择 Git 安装位置，然后点击 <strong><em>next\</em></strong>：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-acdb676bf346b7bc844946ba5b4994d2_720w.jpg" alt="img"></p><ul><li>保持默认就好，直接点击 <strong><em>next</em></strong>：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-01beee7ec450d746190901e14896f183_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-6f8213444c1d382a9f72c012b43cf9f4_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-3dcca92f4b2ab2a909e773c75d55bb9e_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-99ba29abf274903ac4319558920d5741_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-09bafa50241530e08ea6ca7a215de2dd_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-a5179b18ef6e7ee2373278803d07eeb5_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-51a46602b6b59bf66447a47ea1117232_720w.jpg" alt="img"></p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-b63d3a8617a7c9d2574c8eb5ed98d217_720w.jpg" alt="img"></p><ul><li>完成后选择打开 Git Bash 即可：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-c4f1129c5fbb5ed081e6817d1bb3b97d_720w.jpg" alt="img"></p><ul><li>检验成功，点击鼠标右键，出现下图中图标即完成：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-f9c4facc5feccfd6613965fabc8d0833_720w.jpg" alt="img"></p><ul><li>打开 Git Bash, 输入git:</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-3d312f3ae164edbe8627faeb25684805_720w.jpg" alt="img"></p><p>​        回车得到如下图：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-0f41afdb907b3f7f9b26769a2eab1784_720w.jpg" alt="img"></p><h2 id="三、安装Nodejs和Hexo"><a href="#三、安装Nodejs和Hexo" class="headerlink" title="三、安装Nodejs和Hexo"></a>三、安装Nodejs和Hexo</h2><ul><li><p>Nodejs详见NVM安装过程</p></li><li><p>Hexo安装</p></li><li><p>首先在D盘建立一个文件夹 Blog，点开 Blog 文件夹，鼠标右键打开 Git Bush Here，输入npm命令安装Hexo：</p></li></ul><pre class="line-numbers language-text"><code class="language-text">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装完成后，输入 hexo init 命令初始化博客：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-e58d83d78710849cdc32321f122550e8_720w.jpg" alt="img"></p><ul><li>然后输入 hexo g 静态部署：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-fdc87aa8600fdbbecdc0c9bc2c141412_720w.jpg" alt="img"></p><ul><li>这时网页已经部署完成，输入 hexo s 命令可以查看：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-11a0b4917c962bab07a48f7a04160e8b_720w.png" alt="img"></p><ul><li>浏览器输入 <a href="https://link.zhihu.com/?target=http%3A//baixin.io/2015/08/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%9C%80%E5%8E%9F%E5%A7%8B%E7%9A%84%E6%95%88%E6%9E%9C%E4%BA%86" target="_blank" rel="noopener">http://localhost:4000</a> 就可以打开新部署的网页：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-5a8d3a94b1eb5e4e79f2e733ddaed2aa_720w.jpg" alt="img"></p><ul><li>看完之后 ctrl +c 停止运行服务器。</li></ul><h2 id="四、SSH绑定GitHub"><a href="#四、SSH绑定GitHub" class="headerlink" title="四、SSH绑定GitHub"></a>四、SSH绑定GitHub</h2><p>我们要用git上传文件到GitHub首先得利用SSH登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。</p><ul><li>检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-daee176b8f87fbc5c6ff5feca6bd0887_720w.png" alt="img"></p><ul><li>输入 ssh 命令，查看本机是否安装 SSH：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-b4792b227defc69aa7927ca9b73e4316_720w.jpg" alt="img"></p><ul><li>如上图所示，即已安装 SSH. 然后，输入 ssh-keygen -t rsa 命令<strong><em>（注意空格）</em></strong>，表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub. <strong><em>（注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）\</em></strong>文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</li></ul><pre><code> Linux 系统：~/.ssh Mac 系统：~/.ssh Windows 10 ：C:/Users/ASUS/.ssh</code></pre><ul><li>接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容，你可以通过目录找到 id_rsa.pub 文件的位置，用记事本打开文件复制。如果你实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行：</li></ul><pre class="line-numbers language-c"><code class="language-c">$ cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh $ ls$ cat id_rsa<span class="token punctuation">.</span>pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-692b1cd8e719dac8012afe6fda775209_720w.jpg" alt="img"></p><ul><li>（再次注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和Shift+insert.）接下来进入我们的 GitHub 主页，先点击右上角，再点击 settings：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-0fe5a7f1dcbff38030bfdfeaba2c9515_720w.jpg" alt="img"></p><ul><li>如下图，先点击 <strong>SSH and GPG keys，</strong>再点击 <strong>New SSH key.</strong></li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-c799cbbea9d6ca9572796364571790bd_720w.jpg" alt="img"></p><ul><li>将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 <strong>Add SSH key，</strong>如下图：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-0b61abaf4069dc04003e85e7499d42b0_720w.jpg" alt="img"></p><ul><li>验证是否成功，我们可以通过在 Git Bash 中输入 ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 进行检验：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-5b4f05ea2e2a7fb8b13fd35a9bafa8ce_720w.png" alt="img"></p><ul><li>第一次会出现这种情况，填 yes 就行，若出现下图中的情况，则表明绑定成功：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-3915b3e46e40010d3d911f84d4e8b0ff_720w.png" alt="img"></p><h2 id="五、将Hexo部署到GitHub"><a href="#五、将Hexo部署到GitHub" class="headerlink" title="五、将Hexo部署到GitHub"></a>五、将Hexo部署到GitHub</h2><ul><li>现在回到我们的 Blog 文件夹，用笔记本打开 _config.yml 文件，如下图：</li></ul><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-b60225e9260cd78e1142e81c133b567a_720w.jpg" alt="img"></p><ul><li>下滑到文件底部，填上如下内容：</li></ul><pre class="line-numbers language-text"><code class="language-text">deploy:  type: git  repository: https://github.com/fengye97/fengye97.github.io.git  #你的仓库地址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意空格：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-7f9e09b1827fd9202088cc9d9b19880e_720w.png" alt="img"></p><p>你的仓库地址就是下图这个：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-5014abdff592085ca394335730020fae_720w.jpg" alt="img"></p><p>然后回到 Blog 文件夹中，打开 Git Bash，安装Git部署插件，输入命令：</p><pre class="line-numbers language-text"><code class="language-text">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-a5172536904c8eaa602debc6e54c877b_720w.jpg" alt="img"></p><p>然后分别输入以下三条命令：</p><pre class="line-numbers language-text"><code class="language-text">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 publichexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-54e0b045f1d46c70e740ec83a3552fe0_720w.jpg" alt="img"></p><p>完成以后，打开浏览器，输入 <a href="https://link.zhihu.com/?target=https%3A//fengye97.github.io/" target="_blank" rel="noopener">https://xxx.github.io</a> 就可以打开你的网页了：</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/v2-aa3a0b56dbcadf942397b8ea224b78b9_720w.jpg" alt="img"></p><h2 id="六、写文章、发布文章"><a href="#六、写文章、发布文章" class="headerlink" title="六、写文章、发布文章"></a>六、写文章、发布文章</h2><p>首先在博客根目录下右键打开Git Bash Here输入以下命令，安装一个扩展.</p><pre><code>npm i hexo-deployer-git</code></pre><p>然后输入下面的命令，新建一篇文章。</p><pre><code>hexo new post &quot;article title&quot;</code></pre><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/22.png" alt="img"></p><p>然后打开C:\panakot Blog\Hexo\source_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p><p><img src="https://gitee.com/charlesli1111/picgo-image-lib/raw/master/23.png" alt="img"></p><p>编写完markdown文件后，根目录下右键打开Git Bash Here输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。</p><p>你的博客地址：https://你的用户名.github.io</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
